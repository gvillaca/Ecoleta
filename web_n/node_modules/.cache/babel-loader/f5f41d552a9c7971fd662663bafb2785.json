{"ast":null,"code":"var _jsxFileName = \"C:\\\\ESTUDOS\\\\NLW\\\\Ecoleta\\\\web\\\\src\\\\pages\\\\CreatePoint\\\\index.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { FiArrowLeft } from \"react-icons/fi\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\nimport axios from \"axios\";\nimport Dropzone from \"../../components/Dropzone\";\nimport \"./styles.css\";\nimport logo from \"../../assets/logo.svg\";\nimport api from \"../../services/api\";\n/*\r\n  quando cria um estado de array ou objeto: precisa informar manualmente\r\n  o tipo da variÃ¡vel\r\n*/\n\nconst CreatePoint = () => {\n  const [itens, setItens] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [selectedUf, setSelectedUf] = useState(\"0\");\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(\"0\");\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [selectedItens, setSelectedItens] = useState([]);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    whatsapp: \"\"\n  });\n  const history = useHistory();\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log(position.coords);\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get(\"itens\").then(res => {\n      setItens(res.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get(\"https://servicodados.ibge.gov.br/api/v1/localidades/estados\").then(res => {\n      const ufInitials = res.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    //carregar as cidades sempre que a UF mudar\n    if (selectedUf === \"0\") {\n      setSelectedCity(\"0\");\n      setCities([]);\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(res => {\n      const cityNames = res.data.map(city => city.nome);\n      setCities(cityNames);\n    });\n  }, [selectedUf]);\n\n  function handleSelectUf(event) {\n    setSelectedUf(event.target.value);\n  }\n\n  function handleSelectCity(event) {\n    setSelectedCity(event.target.value);\n  }\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSelectItem(id) {\n    const alreadySelected = selectedItens.findIndex(item => item == id);\n\n    if (alreadySelected >= 0) {\n      const filteredItens = selectedItens.filter(item => item !== id);\n      setSelectedItens(filteredItens);\n    } else {\n      setSelectedItens([...selectedItens, id]);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp\n    } = formData;\n    const uf = selectedUf;\n    const city = selectedCity;\n    const [latitude, longitude] = selectedPosition;\n    const itens = selectedItens;\n    const data = {\n      name,\n      email,\n      whatsapp,\n      uf,\n      city,\n      latitude,\n      longitude,\n      itens\n    };\n    await api.post('points', data);\n    alert('Ponto de coleta criado');\n    history.push('/');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }), \"Voltar para home\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 23\n    }\n  }), \" ponto de coleta\"), /*#__PURE__*/React.createElement(Dropzone, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, \"Selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: initialPosition,\n    zoom: 15,\n    onCliCk: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }, \"Estado (Uf)\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    onChange: handleSelectUf,\n    value: selectedUf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, \"Selecione um UF\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf,\n    value: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 19\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    onChange: handleSelectCity,\n    value: selectedCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, \"Selecione uma cidade\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city,\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 19\n    }\n  }, city)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, \"\\xCDtens de coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, \"Selecione um ou mais \\xEDtens abaixo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, itens.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    onClick: () => handleSelectItem(item.id),\n    className: selectedItens.includes(item.id) ? \"selected\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["C:/ESTUDOS/NLW/Ecoleta/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","FiArrowLeft","Link","useHistory","Map","TileLayer","Marker","axios","Dropzone","api","CreatePoint","itens","setItens","ufs","setUfs","selectedUf","setSelectedUf","cities","setCities","selectedCity","setSelectedCity","selectedPosition","setSelectedPosition","initialPosition","setInitialPosition","selectedItens","setSelectedItens","formData","setFormData","name","email","whatsapp","history","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","longitude","get","then","res","data","ufInitials","map","uf","sigla","cityNames","city","nome","handleSelectUf","event","target","value","handleSelectCity","handleMapClick","latlng","lat","lng","handleInputChange","handleSelectItem","id","alreadySelected","findIndex","item","filteredItens","filter","handleSubmit","preventDefault","post","alert","push","logo","includes","image_url","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent, FormEvent } from \"react\";\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\r\nimport axios from \"axios\";\r\nimport { LeafletMouseEvent } from \"leaflet\";\r\n\r\nimport Dropzone from \"../../components/Dropzone\"\r\n\r\nimport \"./styles.css\";\r\nimport logo from \"../../assets/logo.svg\";\r\nimport api from \"../../services/api\";\r\n\r\n/*\r\n  quando cria um estado de array ou objeto: precisa informar manualmente\r\n  o tipo da variÃ¡vel\r\n*/\r\n\r\ninterface Item {\r\n  id: number;\r\n  title: string;\r\n  image_url: string;\r\n}\r\n\r\ninterface IBGEUFResponse {\r\n  sigla: string;\r\n}\r\ninterface IBGECityResponse {\r\n  nome: string;\r\n}\r\n\r\nconst CreatePoint = () => {\r\n  const [itens, setItens] = useState<Item[]>([]);\r\n  const [ufs, setUfs] = useState<string[]>([]);\r\n  const [selectedUf, setSelectedUf] = useState<string>(\"0\");\r\n  const [cities, setCities] = useState<string[]>([]);\r\n  const [selectedCity, setSelectedCity] = useState<string>(\"0\");\r\n  const [selectedPosition, setSelectedPosition] = useState<[number, number]>([\r\n    0,\r\n    0,\r\n  ]);\r\n  const [initialPosition, setInitialPosition] = useState<[number, number]>([\r\n    0,\r\n    0,\r\n  ]);\r\n  const [selectedItens, setSelectedItens] = useState<number[]>([]);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    whatsapp: \"\",\r\n  });\r\n  const history = useHistory();\r\n\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      console.log(position.coords);\r\n      const { latitude, longitude } = position.coords;\r\n      setInitialPosition([latitude, longitude]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    api.get(\"itens\").then((res) => {\r\n      setItens(res.data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get<IBGEUFResponse[]>(\r\n        \"https://servicodados.ibge.gov.br/api/v1/localidades/estados\"\r\n      )\r\n      .then((res) => {\r\n        const ufInitials = res.data.map((uf) => uf.sigla);\r\n        setUfs(ufInitials);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //carregar as cidades sempre que a UF mudar\r\n    if (selectedUf === \"0\") {\r\n      setSelectedCity(\"0\");\r\n      setCities([]);\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .get<IBGECityResponse[]>(\r\n        `https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`\r\n      )\r\n      .then((res) => {\r\n        const cityNames = res.data.map((city) => city.nome);\r\n        setCities(cityNames);\r\n      });\r\n  }, [selectedUf]);\r\n\r\n  function handleSelectUf(event: ChangeEvent<HTMLSelectElement>) {\r\n    setSelectedUf(event.target.value);\r\n  }\r\n\r\n  function handleSelectCity(event: ChangeEvent<HTMLSelectElement>) {\r\n    setSelectedCity(event.target.value);\r\n  }\r\n\r\n  function handleMapClick(event: LeafletMouseEvent) {\r\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\r\n  }\r\n\r\n  function handleInputChange(event: ChangeEvent<HTMLInputElement>) {\r\n    const { name, value } = event.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n\r\n  function handleSelectItem(id: number) {\r\n    const alreadySelected = selectedItens.findIndex(\r\n      (item: number) => item == id\r\n    );\r\n    if (alreadySelected >= 0) {\r\n      const filteredItens = selectedItens.filter((item: number) => item !== id);\r\n      setSelectedItens(filteredItens);\r\n    } else {\r\n      setSelectedItens([...selectedItens, id]);\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(event: FormEvent) {\r\n    event.preventDefault();\r\n\r\n    const { name, email, whatsapp } = formData;\r\n    const uf = selectedUf;\r\n    const city = selectedCity;\r\n    const [latitude, longitude] = selectedPosition;\r\n    const itens = selectedItens;\r\n\r\n    const data = {\r\n      name,\r\n      email,\r\n      whatsapp,\r\n      uf,\r\n      city,\r\n      latitude,\r\n      longitude,\r\n      itens,\r\n    };\r\n\r\n    await api.post('points', data);\r\n\r\n    alert('Ponto de coleta criado');\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-create-point\">\r\n      <header>\r\n        <img src={logo} alt=\"Ecoleta\" />\r\n\r\n        <Link to=\"/\">\r\n          <FiArrowLeft />\r\n          Voltar para home\r\n        </Link>\r\n      </header>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>\r\n          Cadastro do <br /> ponto de coleta\r\n        </h1>\r\n\r\n        <Dropzone />\r\n\r\n        <fieldset>\r\n          <legend>\r\n            <h2>Dados</h2>\r\n          </legend>\r\n          <div className=\"field\">\r\n            <label htmlFor=\"name\">Nome da entidade</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"field-group\">\r\n            <div className=\"field\">\r\n              <label htmlFor=\"email\">E-mail</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label htmlFor=\"whatsapp\">Whatsapp</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"whatsapp\"\r\n                id=\"whatsapp\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n          <legend>\r\n            <h2>EndereÃ§o</h2>\r\n            <span>Selecione o endereÃ§o no mapa</span>\r\n          </legend>\r\n\r\n          <Map center={initialPosition} zoom={15} onCliCk={handleMapClick}>\r\n            <TileLayer\r\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            <Marker position={selectedPosition} />\r\n          </Map>\r\n\r\n          <div className=\"field-group\">\r\n            <div className=\"field\">\r\n              <label htmlFor=\"uf\">Estado (Uf)</label>\r\n              <select\r\n                name=\"uf\"\r\n                id=\"uf\"\r\n                onChange={handleSelectUf}\r\n                value={selectedUf}\r\n              >\r\n                <option value=\"0\">Selecione um UF</option>\r\n                {ufs.map((uf) => (\r\n                  <option key={uf} value={uf}>\r\n                    {uf}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label htmlFor=\"city\">Cidade</label>\r\n              <select\r\n                name=\"city\"\r\n                id=\"city\"\r\n                onChange={handleSelectCity}\r\n                value={selectedCity}\r\n              >\r\n                <option value=\"0\">Selecione uma cidade</option>\r\n                {cities.map((city) => (\r\n                  <option key={city} value={city}>\r\n                    {city}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n          <legend>\r\n            <h2>Ãtens de coleta</h2>\r\n            <span>Selecione um ou mais Ã­tens abaixo</span>\r\n          </legend>\r\n          <ul className=\"items-grid\">\r\n            {itens.map((item) => (\r\n              <li\r\n                key={item.id}\r\n                onClick={() => handleSelectItem(item.id)}\r\n                className={selectedItens.includes(item.id) ? \"selected\" : \"\"}\r\n              >\r\n                <img src={item.image_url} alt={item.title} />\r\n                <span>{item.title}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </fieldset>\r\n\r\n        <button type=\"submit\">Cadastrar ponto de coleta</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePoint;\r\n"]},"metadata":{},"sourceType":"module"}